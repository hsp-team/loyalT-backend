services:
  postgres:
    container_name: postgres
    ports:
      - "8000:5432"
    env_file:
      - .env
    image: postgres:16.2-alpine3.19
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}' ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    restart: always

  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DATABASE}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    ports:
      - '8001:8123'
      - '8002:9000'
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:8123/ping',
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  backend:
    image: gitlab.prodcontest.ru:5050/team-22/backend:master
    container_name: backend
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./logs:/opt/logs
      - ./ssl:/etc/ssl
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy

  watchtower:
    image: containrrr/watchtower
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    command: -i 60
    volumes:
      - /home/ubuntu/.docker/config.json:/config.json
      - /var/run/docker.sock:/var/run/docker.sock


volumes:
  postgres_data:
  clickhouse-data: