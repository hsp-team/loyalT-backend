{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API of LoyalT - platform for creating and managing loyalty programs",
    "title": "LoyalT API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {},
    "version": "1.0"
  },
  "host": "prod-team-22-t62v97db.final.prodcontest.ru",
  "basePath": "/api/v1",
  "paths": {
    "/business": {
      "put": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Update business",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Update business",
        "parameters": [
          {
            "description": "Business data for update",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.BusinessUpdateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dto.BusinessReturn"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/auth/login": {
      "post": {
        "description": "Authenticate business and set secure cookie \"business_auth_token\" with JWT token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Business login",
        "parameters": [
          {
            "description": "Business credentials",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.BusinessLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/auth/logout": {
      "post": {
        "description": "Delete secure cookie \"business_auth_token\" with JWT token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Business logout",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/auth/register": {
      "post": {
        "description": "Register a new business in the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Register new business",
        "parameters": [
          {
            "description": "Business registration data",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.BusinessRegisterRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dto.BusinessRegisterResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/coin_program": {
      "get": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Get business coin program. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Get coin program",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CoinProgramReturn"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Update business coin program. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Update coin program",
        "parameters": [
          {
            "description": "Data for update",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.CoinProgramUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CoinProgramUpdateResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Create new coin program and return it. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Create new coin program",
        "parameters": [
          {
            "description": "Data for creation",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.CoinProgramCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CoinProgramCreateResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/coin_program/reward/{reward_id}": {
      "delete": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Delete reward from coin program. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Delete reward",
        "parameters": [
          {
            "type": "string",
            "description": "Reward ID (uuid)",
            "name": "reward_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/coin_program/rewards": {
      "get": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "List rewards for coin program. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "List rewards",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "default": 10,
            "description": "Number of items to return",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "default": 0,
            "description": "Number of items to skip",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of rewards",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.RewardReturn"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Create new reward for coin program. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Create new reward",
        "parameters": [
          {
            "description": "Reward creation data",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.RewardCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dto.RewardCreateResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/coin_program/rewards/activate": {
      "post": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Activate scanned coupon code. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Activate scanned coupon code",
        "parameters": [
          {
            "description": "Reward activation data",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.RewardActivateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.RewardReturn"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/coin_program/scan/enroll": {
      "post": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Add 1 coin to user coin program by qr code",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Enroll coin to user by qr code",
        "parameters": [
          {
            "description": "User QR scan data",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.UserEnrollCoinRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/coin_program/scan/{code}": {
      "get": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Scan user QR to get user data and validate QR",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Scan user QR",
        "parameters": [
          {
            "type": "string",
            "description": "QR code data",
            "name": "code",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.UserQRScanResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/me": {
      "get": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Get business profile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Get business profile",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.BusinessReturn"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/stats/coin_program": {
      "get": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Get business coin program stats. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Get business coin program stats",
        "parameters": [
          {
            "type": "string",
            "description": "period start date",
            "name": "start_date",
            "in": "query"
          },
          {
            "type": "string",
            "description": "period end date",
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.BusinessCoinProgramStatsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/stats/daily/active_users": {
      "get": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Get business active users daily stats. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Get business active users daily stats",
        "parameters": [
          {
            "type": "string",
            "description": "period start date",
            "name": "start_date",
            "in": "query"
          },
          {
            "type": "string",
            "description": "period end date",
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.BusinessStatsDailyActiveUsersResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/stats/daily/total_users": {
      "get": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Get business total users daily stats. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Get business total users daily stats",
        "parameters": [
          {
            "type": "string",
            "description": "period start date",
            "name": "start_date",
            "in": "query"
          },
          {
            "type": "string",
            "description": "period end date",
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.BusinessStatsDailyTotalUsersResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/business/stats/general": {
      "get": {
        "security": [
          {
            "BusinessAuthCookie": []
          }
        ],
        "description": "Get business general stats. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Business"
        ],
        "summary": "Get business stats",
        "parameters": [
          {
            "type": "string",
            "description": "period start date",
            "name": "start_date",
            "in": "query"
          },
          {
            "type": "string",
            "description": "period end date",
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.BusinessStatsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/user/auth/login": {
      "post": {
        "description": "Authenticate user and set secure cookie \"user_auth_token\" with JWT token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "parameters": [
          {
            "description": "User credentials",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.UserLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/user/auth/logout": {
      "post": {
        "description": "Delete secure cookie \"user_auth_token\" with JWT token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/user/auth/register": {
      "post": {
        "description": "Register a new user in the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Register new user",
        "parameters": [
          {
            "description": "User registration data",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.UserRegisterRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dto.UserRegisterResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/user/coin_programs": {
      "get": {
        "security": [
          {
            "UserAuthCookie": []
          }
        ],
        "description": "Get user's coin programs. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "List user's coin programs",
        "parameters": [
          {
            "type": "integer",
            "description": "Limit",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Offset",
            "name": "offset",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.CoinProgramParticipantReturn"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/user/coin_programs/rewards/available": {
      "get": {
        "security": [
          {
            "UserAuthCookie": []
          }
        ],
        "description": "Get rewards available for user. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "Get rewards available for user",
        "parameters": [
          {
            "type": "integer",
            "description": "Limit",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Offset",
            "name": "offset",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.CoinProgramWithRewardsReturn"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/user/coin_programs/{coin_program_id}/rewards/{reward_id}/buy": {
      "post": {
        "security": [
          {
            "UserAuthCookie": []
          }
        ],
        "description": "Buy reward by its id. Requires user_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "Buy reward by its id",
        "parameters": [
          {
            "type": "string",
            "description": "Coin program ID (uuid)",
            "name": "coin_program_participant_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Reward ID (uuid)",
            "name": "reward_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.RewardBuyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "402": {
            "description": "Payment Required",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/user/coin_programs/{coin_program_participant_id}": {
      "get": {
        "security": [
          {
            "UserAuthCookie": []
          }
        ],
        "description": "Get user's coin program by ID. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "Get user's coin program by id",
        "parameters": [
          {
            "type": "string",
            "description": "Coin program ID (uuid)",
            "name": "coin_program_participant_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CoinProgramParticipantReturn"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/user/coin_programs/{coin_program_participant_id}/rewards": {
      "get": {
        "security": [
          {
            "UserAuthCookie": []
          }
        ],
        "description": "List rewards for user by coin program id. Requires business_auth_token cookie for authentication.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "List rewards for user",
        "parameters": [
          {
            "type": "string",
            "description": "Coin program participant id",
            "name": "coin_program_participant_id",
            "in": "path",
            "required": true
          },
          {
            "minimum": 1,
            "type": "integer",
            "default": 10,
            "description": "Number of items to return",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "default": 0,
            "description": "Number of items to skip",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of rewards",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.RewardReturn"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "description": "Get user profile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Get user profile",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.UserGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    },
    "/user/qr": {
      "get": {
        "description": "Get user qr code data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "Get user qr code data",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.QRGetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.HTTPStatus"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "dto.BusinessCoinProgramStatsResponse": {
      "type": "object",
      "properties": {
        "coupons_purchased_in_period": {
          "type": "integer"
        },
        "points_received_in_period": {
          "type": "integer"
        },
        "total_coupons_purchased": {
          "type": "integer"
        },
        "total_points_received": {
          "type": "integer"
        }
      }
    },
    "dto.BusinessLoginRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "dto.BusinessRegisterRequest": {
      "type": "object",
      "required": [
        "email",
        "name",
        "password"
      ],
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 150
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 3
        },
        "password": {
          "type": "string"
        }
      }
    },
    "dto.BusinessRegisterResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "dto.BusinessReturn": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "dto.BusinessStatsDailyActiveUsersResponse": {
      "type": "object",
      "properties": {
        "active_users": {
          "type": "integer"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "dto.BusinessStatsDailyTotalUsersResponse": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "total_users": {
          "type": "integer"
        }
      }
    },
    "dto.BusinessStatsResponse": {
      "type": "object",
      "properties": {
        "active_users": {
          "type": "integer"
        },
        "new_users": {
          "type": "integer"
        },
        "total_users": {
          "type": "integer"
        }
      }
    },
    "dto.BusinessUpdateRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 150
        },
        "name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 3
        }
      }
    },
    "dto.CoinProgramCreateRequest": {
      "type": "object",
      "required": [
        "card_color",
        "day_limit",
        "name"
      ],
      "properties": {
        "card_color": {
          "type": "string"
        },
        "day_limit": {
          "type": "integer",
          "minimum": 1
        },
        "description": {
          "type": "string",
          "maxLength": 150
        },
        "name": {
          "type": "string",
          "maxLength": 30,
          "minLength": 3
        }
      }
    },
    "dto.CoinProgramCreateResponse": {
      "type": "object",
      "properties": {
        "card_color": {
          "type": "string"
        },
        "day_limit": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "dto.CoinProgramParticipantReturn": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "integer"
        },
        "card_color": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "dto.CoinProgramReturn": {
      "type": "object",
      "properties": {
        "card_color": {
          "type": "string"
        },
        "day_limit": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "dto.CoinProgramUpdateRequest": {
      "type": "object",
      "required": [
        "card_color",
        "day_limit",
        "name"
      ],
      "properties": {
        "card_color": {
          "type": "string"
        },
        "day_limit": {
          "type": "integer",
          "minimum": 1
        },
        "description": {
          "type": "string",
          "maxLength": 150
        },
        "name": {
          "type": "string",
          "maxLength": 30,
          "minLength": 3
        }
      }
    },
    "dto.CoinProgramUpdateResponse": {
      "type": "object",
      "properties": {
        "card_color": {
          "type": "string"
        },
        "day_limit": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "dto.CoinProgramWithRewardsReturn": {
      "type": "object",
      "properties": {
        "coin_program": {
          "$ref": "#/definitions/dto.CoinProgramParticipantReturn"
        },
        "rewards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.RewardReturn"
          }
        }
      }
    },
    "dto.HTTPStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "dto.QRGetResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "dto.RewardActivateRequest": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "dto.RewardBuyResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "dto.RewardCreateRequest": {
      "type": "object",
      "required": [
        "cost",
        "image_url",
        "name"
      ],
      "properties": {
        "cost": {
          "type": "integer",
          "minimum": 1
        },
        "description": {
          "type": "string",
          "maxLength": 150
        },
        "image_url": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 3
        }
      }
    },
    "dto.RewardCreateResponse": {
      "type": "object",
      "properties": {
        "cost": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "dto.RewardReturn": {
      "type": "object",
      "properties": {
        "cost": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "dto.UserEnrollCoinRequest": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "dto.UserGetResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "statistics": {
          "$ref": "#/definitions/dto.UserStatisticsResponse"
        }
      }
    },
    "dto.UserLoginRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "dto.UserQRScanResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "dto.UserRegisterRequest": {
      "type": "object",
      "required": [
        "email",
        "name",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "dto.UserRegisterResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "dto.UserStatisticsResponse": {
      "type": "object",
      "properties": {
        "coupons_bought": {
          "type": "integer"
        },
        "user_qr_scanned_count": {
          "type": "integer"
        }
      }
    }
  }
}