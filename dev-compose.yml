services:
  postgres:
    container_name: postgres
    ports:
      - "8000:5432"
    env_file:
      - .env
    image: postgres:16.2-alpine3.19
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}' ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  backend:
    build: .
    container_name: backend
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./logs:/opt/logs
      - ./ssl:/etc/ssl
    depends_on:
      postgres:
        condition: service_healthy

#  nginx-proxy-manager:
#    container_name: nginx-proxy-manager
#    image: 'jc21/nginx-proxy-manager:latest'
#    restart: unless-stopped
#    ports:
#      - '80:80'
#      - '81:81'
#      - '443:443'
#    volumes:
#      - ./nginx-proxy-manager:/data
#      - ./letsencrypt:/etc/letsencrypt


volumes:
  #  nginx-proxy-manager:
  postgres_data:
