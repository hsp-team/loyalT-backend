// Code generated by ent, DO NOT EDIT.

package ent

import (
	"loyalit/internal/adapters/repository/postgres/ent/business"
	"loyalit/internal/adapters/repository/postgres/ent/coinprogram"
	"loyalit/internal/adapters/repository/postgres/ent/coinprogramparticipant"
	"loyalit/internal/adapters/repository/postgres/ent/coupon"
	"loyalit/internal/adapters/repository/postgres/ent/reward"
	"loyalit/internal/adapters/repository/postgres/ent/schema"
	"loyalit/internal/adapters/repository/postgres/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	businessFields := schema.Business{}.Fields()
	_ = businessFields
	// businessDescCreatedAt is the schema descriptor for created_at field.
	businessDescCreatedAt := businessFields[1].Descriptor()
	// business.DefaultCreatedAt holds the default value on creation for the created_at field.
	business.DefaultCreatedAt = businessDescCreatedAt.Default.(time.Time)
	// businessDescName is the schema descriptor for name field.
	businessDescName := businessFields[2].Descriptor()
	// business.NameValidator is a validator for the "name" field. It is called by the builders before save.
	business.NameValidator = businessDescName.Validators[0].(func(string) error)
	// businessDescEmail is the schema descriptor for email field.
	businessDescEmail := businessFields[3].Descriptor()
	// business.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	business.EmailValidator = businessDescEmail.Validators[0].(func(string) error)
	// businessDescPassword is the schema descriptor for password field.
	businessDescPassword := businessFields[4].Descriptor()
	// business.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	business.PasswordValidator = businessDescPassword.Validators[0].(func(string) error)
	// businessDescDescription is the schema descriptor for description field.
	businessDescDescription := businessFields[5].Descriptor()
	// business.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	business.DescriptionValidator = businessDescDescription.Validators[0].(func(string) error)
	// businessDescID is the schema descriptor for id field.
	businessDescID := businessFields[0].Descriptor()
	// business.DefaultID holds the default value on creation for the id field.
	business.DefaultID = businessDescID.Default.(func() uuid.UUID)
	coinprogramFields := schema.CoinProgram{}.Fields()
	_ = coinprogramFields
	// coinprogramDescCreatedAt is the schema descriptor for created_at field.
	coinprogramDescCreatedAt := coinprogramFields[1].Descriptor()
	// coinprogram.DefaultCreatedAt holds the default value on creation for the created_at field.
	coinprogram.DefaultCreatedAt = coinprogramDescCreatedAt.Default.(time.Time)
	// coinprogramDescName is the schema descriptor for name field.
	coinprogramDescName := coinprogramFields[2].Descriptor()
	// coinprogram.NameValidator is a validator for the "name" field. It is called by the builders before save.
	coinprogram.NameValidator = coinprogramDescName.Validators[0].(func(string) error)
	// coinprogramDescDayLimit is the schema descriptor for day_limit field.
	coinprogramDescDayLimit := coinprogramFields[4].Descriptor()
	// coinprogram.DefaultDayLimit holds the default value on creation for the day_limit field.
	coinprogram.DefaultDayLimit = coinprogramDescDayLimit.Default.(uint)
	// coinprogram.DayLimitValidator is a validator for the "day_limit" field. It is called by the builders before save.
	coinprogram.DayLimitValidator = coinprogramDescDayLimit.Validators[0].(func(uint) error)
	// coinprogramDescCardColor is the schema descriptor for card_color field.
	coinprogramDescCardColor := coinprogramFields[5].Descriptor()
	// coinprogram.CardColorValidator is a validator for the "card_color" field. It is called by the builders before save.
	coinprogram.CardColorValidator = coinprogramDescCardColor.Validators[0].(func(string) error)
	// coinprogramDescID is the schema descriptor for id field.
	coinprogramDescID := coinprogramFields[0].Descriptor()
	// coinprogram.DefaultID holds the default value on creation for the id field.
	coinprogram.DefaultID = coinprogramDescID.Default.(func() uuid.UUID)
	coinprogramparticipantFields := schema.CoinProgramParticipant{}.Fields()
	_ = coinprogramparticipantFields
	// coinprogramparticipantDescCreatedAt is the schema descriptor for created_at field.
	coinprogramparticipantDescCreatedAt := coinprogramparticipantFields[1].Descriptor()
	// coinprogramparticipant.DefaultCreatedAt holds the default value on creation for the created_at field.
	coinprogramparticipant.DefaultCreatedAt = coinprogramparticipantDescCreatedAt.Default.(time.Time)
	// coinprogramparticipantDescBalance is the schema descriptor for balance field.
	coinprogramparticipantDescBalance := coinprogramparticipantFields[2].Descriptor()
	// coinprogramparticipant.DefaultBalance holds the default value on creation for the balance field.
	coinprogramparticipant.DefaultBalance = coinprogramparticipantDescBalance.Default.(uint)
	// coinprogramparticipantDescID is the schema descriptor for id field.
	coinprogramparticipantDescID := coinprogramparticipantFields[0].Descriptor()
	// coinprogramparticipant.DefaultID holds the default value on creation for the id field.
	coinprogramparticipant.DefaultID = coinprogramparticipantDescID.Default.(func() uuid.UUID)
	couponFields := schema.Coupon{}.Fields()
	_ = couponFields
	// couponDescCreatedAt is the schema descriptor for created_at field.
	couponDescCreatedAt := couponFields[1].Descriptor()
	// coupon.DefaultCreatedAt holds the default value on creation for the created_at field.
	coupon.DefaultCreatedAt = couponDescCreatedAt.Default.(time.Time)
	// couponDescCode is the schema descriptor for code field.
	couponDescCode := couponFields[2].Descriptor()
	// coupon.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	coupon.CodeValidator = couponDescCode.Validators[0].(func(string) error)
	// couponDescActivated is the schema descriptor for activated field.
	couponDescActivated := couponFields[3].Descriptor()
	// coupon.DefaultActivated holds the default value on creation for the activated field.
	coupon.DefaultActivated = couponDescActivated.Default.(bool)
	// couponDescID is the schema descriptor for id field.
	couponDescID := couponFields[0].Descriptor()
	// coupon.DefaultID holds the default value on creation for the id field.
	coupon.DefaultID = couponDescID.Default.(func() uuid.UUID)
	rewardFields := schema.Reward{}.Fields()
	_ = rewardFields
	// rewardDescCreatedAt is the schema descriptor for created_at field.
	rewardDescCreatedAt := rewardFields[1].Descriptor()
	// reward.DefaultCreatedAt holds the default value on creation for the created_at field.
	reward.DefaultCreatedAt = rewardDescCreatedAt.Default.(time.Time)
	// rewardDescName is the schema descriptor for name field.
	rewardDescName := rewardFields[2].Descriptor()
	// reward.NameValidator is a validator for the "name" field. It is called by the builders before save.
	reward.NameValidator = rewardDescName.Validators[0].(func(string) error)
	// rewardDescCost is the schema descriptor for cost field.
	rewardDescCost := rewardFields[4].Descriptor()
	// reward.CostValidator is a validator for the "cost" field. It is called by the builders before save.
	reward.CostValidator = rewardDescCost.Validators[0].(func(uint) error)
	// rewardDescImageURL is the schema descriptor for image_url field.
	rewardDescImageURL := rewardFields[5].Descriptor()
	// reward.ImageURLValidator is a validator for the "image_url" field. It is called by the builders before save.
	reward.ImageURLValidator = rewardDescImageURL.Validators[0].(func(string) error)
	// rewardDescID is the schema descriptor for id field.
	rewardDescID := rewardFields[0].Descriptor()
	// reward.DefaultID holds the default value on creation for the id field.
	reward.DefaultID = rewardDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(time.Time)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[2].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[3].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[4].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
