// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BusinessesColumns holds the columns for the "businesses" table.
	BusinessesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
	}
	// BusinessesTable holds the schema information for the "businesses" table.
	BusinessesTable = &schema.Table{
		Name:       "businesses",
		Columns:    BusinessesColumns,
		PrimaryKey: []*schema.Column{BusinessesColumns[0]},
	}
	// CoinProgramsColumns holds the columns for the "coin_programs" table.
	CoinProgramsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "day_limit", Type: field.TypeUint, Default: 1},
		{Name: "card_color", Type: field.TypeString},
		{Name: "business_coin_program", Type: field.TypeUUID, Unique: true},
	}
	// CoinProgramsTable holds the schema information for the "coin_programs" table.
	CoinProgramsTable = &schema.Table{
		Name:       "coin_programs",
		Columns:    CoinProgramsColumns,
		PrimaryKey: []*schema.Column{CoinProgramsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "coin_programs_businesses_coin_program",
				Columns:    []*schema.Column{CoinProgramsColumns[6]},
				RefColumns: []*schema.Column{BusinessesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CoinProgramParticipantsColumns holds the columns for the "coin_program_participants" table.
	CoinProgramParticipantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "balance", Type: field.TypeUint, Default: 0},
		{Name: "coin_program_participant_coin_program", Type: field.TypeUUID, Nullable: true},
		{Name: "user_coin_programs", Type: field.TypeUUID, Nullable: true},
	}
	// CoinProgramParticipantsTable holds the schema information for the "coin_program_participants" table.
	CoinProgramParticipantsTable = &schema.Table{
		Name:       "coin_program_participants",
		Columns:    CoinProgramParticipantsColumns,
		PrimaryKey: []*schema.Column{CoinProgramParticipantsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "coin_program_participants_coin_programs_coin_program",
				Columns:    []*schema.Column{CoinProgramParticipantsColumns[3]},
				RefColumns: []*schema.Column{CoinProgramsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "coin_program_participants_users_coin_programs",
				Columns:    []*schema.Column{CoinProgramParticipantsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CouponsColumns holds the columns for the "coupons" table.
	CouponsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "activated", Type: field.TypeBool, Default: false},
		{Name: "reward_rewards", Type: field.TypeUUID},
		{Name: "user_coupons", Type: field.TypeUUID, Nullable: true},
	}
	// CouponsTable holds the schema information for the "coupons" table.
	CouponsTable = &schema.Table{
		Name:       "coupons",
		Columns:    CouponsColumns,
		PrimaryKey: []*schema.Column{CouponsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "coupons_rewards_rewards",
				Columns:    []*schema.Column{CouponsColumns[4]},
				RefColumns: []*schema.Column{RewardsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "coupons_users_coupons",
				Columns:    []*schema.Column{CouponsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "coupon_code",
				Unique:  true,
				Columns: []*schema.Column{CouponsColumns[2]},
			},
		},
	}
	// RewardsColumns holds the columns for the "rewards" table.
	RewardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "cost", Type: field.TypeUint},
		{Name: "image_url", Type: field.TypeString},
		{Name: "coin_program_rewards", Type: field.TypeUUID, Nullable: true},
	}
	// RewardsTable holds the schema information for the "rewards" table.
	RewardsTable = &schema.Table{
		Name:       "rewards",
		Columns:    RewardsColumns,
		PrimaryKey: []*schema.Column{RewardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rewards_coin_programs_rewards",
				Columns:    []*schema.Column{RewardsColumns[6]},
				RefColumns: []*schema.Column{CoinProgramsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "qr_data", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[3]},
			},
			{
				Name:    "user_qr_data",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BusinessesTable,
		CoinProgramsTable,
		CoinProgramParticipantsTable,
		CouponsTable,
		RewardsTable,
		UsersTable,
	}
)

func init() {
	CoinProgramsTable.ForeignKeys[0].RefTable = BusinessesTable
	CoinProgramParticipantsTable.ForeignKeys[0].RefTable = CoinProgramsTable
	CoinProgramParticipantsTable.ForeignKeys[1].RefTable = UsersTable
	CouponsTable.ForeignKeys[0].RefTable = RewardsTable
	CouponsTable.ForeignKeys[1].RefTable = UsersTable
	RewardsTable.ForeignKeys[0].RefTable = CoinProgramsTable
}
